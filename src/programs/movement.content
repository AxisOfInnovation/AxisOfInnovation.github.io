<meta>
    <formatFile>../default.format</formatFile>
    <sidebarFile>../default.sidebar</sidebarFile>
    <sidebarItem>programs/movement.html</sidebarItem>

    <title>Movement.h</title>
    <externvars file="../syntaxHighlighting.externvars"/>
</meta>

<h1 id="content">Movement.h</h1>

<article>

    <p id="articleTitle"> Heads-up for non-team members </p>
    <p id="article">
        This page is a reference meant for Axis of Innovation members. While you can still access i
        t, it doesn't exactly serve much use as this is documentation for a file specific to our cu
        rrent robot only.
    </p>

</article>

<article>

    <p id="articleTitle">File Description</p>
    <p id="article">
        This is the file we use for handling all the low-level movement with the robot, making it e
        asier to read the written code and much, <i>much</i> faster to write, modify, and debug the 
        code as it's being written.
    </p>

</article>

<article>

    <p id="articleTitle"> Method Overview </p>

    <p id="methodDoc">
        <code>%void% move( %int% left, %int% right )</code><br/>
        Sets the designated powers to the correct wheels. <br/>

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% left </td>
                <td> The new power for the left wheel </td>
            </tr>
            <tr>
                <td> %int% right </td>
                <td> The new power for the right wheel </td>
            </tr>

        </table>
    </p>

    <br/>

    <p id="methodDoc">
        <code>%void% move( %int% power )</code><br/>
        Sets the designated power to both the robot's wheels.<br/>

        This causes either completely straight (either forward or backward) movement with no progra
        matic possibility of rotation.

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% power </td>
                <td> The new power for both wheels. </td>
            </tr>

        </table>
    </p>

    <br/>

    <p id="methodDoc">
        <code>%void% brake()</code><br/>
        Stops the robot's wheels by calling <code>move( 0, 0 )</code>
    </p>

    <br/>

    <p id="methodDoc">
        <code>%void% moveEncoder( %int% ticks, %int% power )</code><br/>
        Moves the robot straight (either forwards or backwards) until the specifid motor encoder va
        lue has been met.

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% ticks </td>
                <td> The number of ticks to move towards based off of the right motor's encoder rea
                     dings) </td>
            </tr>
            <tr>
                <td> %int% power </td>
                <td> The power to move the robot straight with. </td>
            </tr>

        </table>
    </p>

    <p id="methodDoc">
        <code>%void% moveDistance( %int% distance, %int% power )</code><br/>
        Moves the robot forward until it's approximately at the given distane. <br/>

        This will get more inaccurate the further it goes, due to the nature of how the encoder val
        ues were calculated, so try for smaller, more gradual steps if you notice any inconsistenci
        es.<br/>

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% distance </td>
                <td> The distance to move the robot (cm). </td>
            </tr>
            <tr>
                <td> %int% power </td>
                <td> The power to move the robot at. </td>
            </tr>

        </table>

    </p>

    <p id="methodDoc">
        <code>%void% rotate( %int% power )</code><br/>
        Rotates the robot at the given speed. Positive is counter-clockwise.<br/>

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% power </td>
                <td> The power to rotate the robot at. </td>
            </tr>

        </table>
    </p>

    <p id="methodDoc">
        <code>%void% rotateEncoder( %int% ticks, %int% power )</code><br/>
        The rotational counterpart for <code>moveEncoder( %int%, %int% )</code>, rotates the robot 
        until it has satisified the encoder values.<br/>

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% ticks </td>
                <td> The number of ticks to rotate (positive is counter clockwise). </td>
            </tr>
            <tr>
                <td> %int% power </td>
                <td> The power to rotate the robot at. </td>
            </tr>

        </table>
    </p>

    <p id="methodDoc">
        <code>%void% rotateDegrees( %int% degrees, %int% power )</code><br/>
        Rotates the robot to the specified degree position, the rotational counterpart for <code>mo
        veDistance( %int%, %int% )</code><br/>

        The degrees position is defined such that rotating <code>90 + 180x</code> (where x is an in
        teger) will always <i>only</i> rotate 90Â° in the counter-clockwise direction. This method r
        otates the the position that the specified number of degrees of rotation would land it at y
        ou should <b>not</b> confuse this with rotating the number of specified degrees!<br/>

        <table border="0" id="parameters">

            <tr>
                <th> Parameter </th>
                <th> Description </th>
            </tr>
            <tr>
                <td> %int% degrees </td>
                <td>
                    The number of degrees to rotate the robot (reduced to the interval [-180&deg,
                    180&deg])
                </td>
            </tr>
            <tr>
                <td> %int% power </td>
                <td> The power to rotate the robot at. </td>
            </tr>

        </table>
    </p>

</article>